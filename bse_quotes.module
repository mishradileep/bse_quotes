<?php

/**
 * Implements hook_help().
 */
function bse_quotes_help($path, $arg) {
  if ($path == 'admin/help#bse_quotes') {
    if (current_path() != 'admin/help/bse_quotes') {
      // Because system_modules() executes hook_help() for each module to 'test'
      // if they will return anything, but not actually display it, we want to
      // return a TRUE value if this is not actually the help page.
      return TRUE;
    }
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('It will allow users to share their links with the site administrator.') . '</p>';
    $output .= '<h3>' . t('Settings') . '</h3>';
    $output .= '<dl>';
    $output .= '<dt>' . t('<strong>Rules:</strong>') . '</dt>';
    $output .= '<dd>' . t('Write your own linking rules.<br/><b>Example:</b> Mysite.com related websites only! (Other none Mysite.com related websites will be removed) We are constantly looking for new perm Mysite.com link exchanges.') . '</dd>';
    $output .= '<dt>' . t('<strong>Linkback:</strong>') . '</dt>';
    $output .= '<dd>' . t('Write your own linking rules.') . '</dd>';
    $output .= '<dt>' . t('<strong>Min PageRank&trade;:</strong>') . '</dt>';
    $output .= '<dd>' . t('Min PageRank&trade; value of link which can be added to you site.<br/><b>Example:</b> 5') . '</dd>';
    $output .= '<dt>' . t('<strong>URL:</strong>') . '</dt>';
    $output .= '<dd>' . t('URL of your site.<br/><b>Example:</b> http://wwww.yoursite.com') . '</dd>';
    $output .= '<dt>' . t('<strong>Site Title:</strong>') . '</dt>';
    $output .= '<dd>' . t('Title of your site.<br/><b>Example:</b> Video Sharing site') . '</dd>';
    $output .= '<dt>' . t('<strong>Site Description:</strong>') . '</dt>';
    $output .= '<dd>' . t('Description of your site.<br/><b>Example:</b> This a video sharing platform where users can share videos.') . '</dd>';
    $output .= '<dt>' . t('<strong>HTML Code:</strong>') . '</dt>';
    $output .= '<dd>' . t('HTML code of your site link.<br/><b>Example:</b> &lt;a href="http://www.yoursite.com" title="Site Title"&gt;Site Title&lt;/a&gt;') . '</dd>';
    $output .= '</dl>';
    return $output;
  }
}

/**
 * Implements hook_permission().
 */
function bse_quotes_permission() {
  return array(
    'administer bse quotes' => array(
      'title' => t('Administer bse quotes'),
      'description' => t('Allows a user to configure and administrate BSE Quotes.'),
    ),
    'use bse quotes' => array(
      'title' => t('Use bse quotes'),
      'description' => t('Allows user to use bse quotes.'),
    ),
  );
}

/**
 * Implements of hook_menu()
 */
function bse_quotes_menu() {
  $items['admin/config/services/bse_quotes/config_quotes'] = array(
    'title' => 'BSE Quotes',
    'description' => 'Configure BSE Quotes',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bse_quotes_config_form'),
  	'access arguments' => array('administer bse quotes'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'file' => 'bse_quotes.admin.inc',
  );
  $items['admin/config/services/bse_quotes/bse_quotes_names/autocomplete'] = array(
		'page callback' => '_bse_quote_names_autocomplete',
		'access arguments' => array('administer bse quotes'),
		'type' => MENU_CALLBACK,
  	'file' => 'bse_quotes.admin.inc',
  );
  $items['admin/config/services/bse_quotes'] = array(
  		'title' => 'BSE Quotes',
  		'description' => 'Configure the BSE stock quote.',
  		'page callback' => 'drupal_get_form',
  		'page arguments' => array('bse_stocks_list'),
  		'access arguments' => array('administer bse quotes'),
  		'type' => MENU_NORMAL_ITEM,
  		'weight' => 30,
  		'file' => 'bse_quotes.admin.inc',
  );
  $items['admin/config/services/bse_quotes/stocks_list'] = array(
  		'title' => 'BSE Configured Quotes',
  		'page callback' => 'drupal_get_form',
  		'page arguments' => array('bse_stocks_list'),
  		'access arguments' => array('administer bse quotes'),
  		'type' => MENU_DEFAULT_LOCAL_TASK,
  		'weight' => 30,
  		'file' => 'bse_quotes.admin.inc',
  );
  $items['bse_quotes'] = array(
  		'title' => 'BSE Quotes',
  		'page callback' => 'bse_quotes',
  		'access arguments' => array('use bse quotes'),
  		'type' => MENU_NORMAL_ITEM,
  		'weight' => 30,
  		'file' => 'bse_quotes.pages.inc',
  );
  return $items;
}




/**
 * Implements hook_block_info().
 */
function bse_quotes_block_info() {
	$blocks = array();
	$blocks['bse_quote_block'] = array(
			'info' => t('BSE Quote Block'),
	);

	return $blocks;
}




/**
 * Implements hook_block_view().
 */
function bse_quotes_block_view($delta='') {
	$block = array();

	switch($delta) {
		case 'bse_quote_block' :
			$block['subject'] = t('BSE Quotes');
			$block['content'] = bse_quote_block();
			break;
	}

	return $block;
}

function bse_quote_block() {
	$items = array();
	
	$query = db_select('bse_quotes', 'bse_quotes')
	->condition('status', 1)
	->range(0, 20)
	->fields('bse_quotes', array(
			'id',
			'stock_code',
			'stock_name',
			'status',
	));
	
	$results = $query->execute();
	
	while($record = $results->fetchAssoc()) {
		$stock_quote[$record['stock_code']] = get_stock_quote($record['stock_code']);
	}

	return theme('block-quote', array('quotes' => $stock_quote));
}

function bse_quotes_theme() {
	$module_path = drupal_get_path('module', 'bse_quotes');
  $base = array('path' => "$module_path/theme",);
	return array('block-quote' => $base + 
		array(
				'template' => 'block-quote',  //leave off .tpl.php
				'variables' => array('items' => NULL,),
    		),   
			'page-quote' => $base +
			array(
					'template' => 'page-quote',  //leave off .tpl.php
					'variables' => array('items' => NULL,),
			),
  ); 
}

/**
 * Implements of hook_exchange_links_operations().
 */
function bse_quotes_bse_quotes_operations($form = array(), $form_state = array()) {
	$operations = array(
			'publish' => array(
					'label' => t('Publish the selected Quotes'),
					'callback' => 'bse_quotes_bse_quotes_operations_publish',
			),
			'unpublish' => array(
					'label' => t('Unpublish the selected Quotes'),
					'callback' => 'bse_quotes_bse_quotes_operations_unpublish',
			),
			'delete' => array(
					'label' => t('Delete the selected Quotes'),
					'callback' => 'bse_quotes_bse_quotes_operations_delete',
			),
	);
	return $operations;
}

/**
 * Callback function for admin mass publishing quotes.
 */
function bse_quotes_bse_quotes_operations_publish($quotes) {
	db_update('bse_quotes')
	->fields(
	array(
	'status' => 1,
	)
	)
	->condition('id', $quotes, 'IN')
	->execute();
}

/**
 * Callback function for admin mass unpublishing links.
 */
function bse_quotes_bse_quotes_operations_unpublish($quotes) {
	db_update('bse_quotes')
	->fields(
	array(
	'status' => 0,
	)
	)
	->condition('id', $quotes, 'IN')
	->execute();
}
/**
 * Callback function for admin mass deleting links.
 */
function bse_quotes_bse_quotes_operations_delete($quotes) {
	db_delete('bse_quotes')
	->condition('id', $quotes, 'IN')
	->execute();
	drupal_set_message(t('The links has been deleted.'));
}

function pr($arr) {
	print "<pre>";
	print_r($arr);
	print "</pre>";
}


function get_stock_quote($stock_code) {
	$cache_name = 'stock_quote_'.$stock_code;
	if ($cache = cache_get($cache_name)) {
		$quotes = $cache->data;
	}
	else {
		$request_uri = 'http://www.stockstobuynow.in/applications/api/stockapp/quotes/'.$stock_code.'.json';
		$stock_quote = drupal_http_request($request_uri);
		$quotes = drupal_json_decode($stock_quote->data);
		cache_set($cache_name, $quotes, 'cache');
	}
	return $quotes;
}